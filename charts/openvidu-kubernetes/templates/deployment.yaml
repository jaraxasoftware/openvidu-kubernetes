apiVersion: apps/v1
kind: Deployment
metadata:
{{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 8 }}
{{- end }}
  name: {{ include "openvidu.fullname" . }}
  labels:
{{ include "openvidu.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "openvidu.fullname" . }}   
      app.kubernetes.io/name: {{ include "openvidu.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "openvidu.fullname" . }}
        app.kubernetes.io/name: {{ include "openvidu.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
{{- range $pval := .Values.jx.imagePullSecrets }}
      - name: {{ quote $pval }}
{{- end }}     
      serviceAccountName: {{ template "openvidu.serviceAccountName" . }}
      containers:
      {{- range $name, $val := .Values.services }}
      {{- if $val.enabled }}
      - name: {{ $name }}
        {{- if eq $name "openvidu" }}
        image: "{{ $val.image.repository }}:{{ $val.image.tag }}"      
        {{- else }}
        image: "{{ $val.image.repository }}:{{ $val.image.fixed_tag }}"      
        {{- end }}
        imagePullPolicy: {{ $val.image.pullPolicy }}
        ports:
        {{- range $index, $proto :=  $val.protocols }}
        {{- if $val.port }}
          - name: "{{ $val.port }}-{{ $proto | lower }}"
            containerPort: {{ $val.port }}
            protocol: {{ $proto }}
        livenessProbe:
          httpGet:
            path: /
            port: {{ $val.port }}
          initialDelaySeconds: {{ $.Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ $.Values.livenessProbe.periodSeconds }}
          successThreshold: {{ $.Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ $.Values.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ $.Values.livenessProbe.failureThreshold }}
        readinessProbe:
          httpGet:
            path: /
            port: {{ $val.port }}
          initialDelaySeconds: {{ $.Values.readinessProbe.initialDelaySeconds }}            
          periodSeconds: {{ $.Values.readinessProbe.periodSeconds }}
          successThreshold: {{ $.Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ $.Values.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ $.Values.readinessProbe.failureThreshold }}                                  
        {{- else }}
        {{- range untilStep ($val.env.KMS_MIN_PORT|int) ($val.env.KMS_MAX_PORT|int) 1}}
          - containerPort: {{ . }}
            protocol: {{ $proto }}
        {{- end }} 
        {{- end }}
        {{- end }}
        {{- if $val.env }}
        env:
        {{- range $pkey, $pval := $val.env }}
        - name: {{ $pkey }}
          value: {{ quote $pval }}
        {{- end }}
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName         
        {{- end }}     
        envFrom:
        - configMapRef:
            name: {{ include "openvidu.fullname" $ }}              
        volumeMounts:            
        {{- if eq $name "metricbeat" }}    
        - name: metricbeat-{{ $.Chart.Name }}
          readOnly: true
          mountPath: /usr/share/metricbeat/metricbeat.yml
          subPath: metricbeat.yml
        - name: docker-socket
          mountPath: /var/run/docker.sock 
          readOnly: true 
        {{- else if eq $name "media-node-controller" }}
        - name: docker-socket
          mountPath: /var/run/docker.sock
          readOnly: true         
        {{- else if eq $name "logging" }}    
        - name: filebeat-{{ $.Chart.Name }}
          readOnly: true
          mountPath: /usr/share/filebeat/filebeat.yml
          subPath: filebeat.yml
        - name: docker-socket
          mountPath: /var/run/docker.sock 
          readOnly: true 
        - name: docker-lib
          mountPath: /var/log/pods
          readOnly: true                 
        {{- end }}
        {{- end }}
        resources:
          {{- toYaml $.Values.resources | nindent 12 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      {{- if .Values.ingress.enabled }}
        {{- if .Values.services.openvidu.ssl.enabled }}   
      - name: tls-{{ .Chart.Name }}
        secret:
          secretName: {{ (index .Values.ingress.tls 0).secretName }}
        {{- end }}
      {{- end }}
      - name: metricbeat-{{ .Chart.Name }}
        configMap:
          name: {{ include "openvidu.fullname" . }}-metricbeat
      - name: filebeat-{{ .Chart.Name }}
        configMap:
          name: {{ include "openvidu.fullname" . }}-filebeat          
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: docker-lib
        hostPath:
          path: /var/log/pods