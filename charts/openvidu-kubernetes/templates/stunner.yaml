{{- if and .Values.stunner.enabled (.Capabilities.APIVersions.Has "gateway.networking.k8s.io/v1") (.Capabilities.APIVersions.Has "stunner.l7mp.io/v1") }}
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: stunner-{{ include "openvidu.fullname" . }}-gatewayclass
spec:
  controllerName: "stunner.l7mp.io/gateway-operator"
  parametersRef:
    group: "stunner.l7mp.io"
    kind: GatewayConfig
    name: stunner-{{ include "openvidu.fullname" . }}-gatewayconfig
    namespace: {{ .Release.Namespace }}
  description: "STUNner is a WebRTC ingress gateway for Kubernetes"
---
apiVersion: v1
kind: Secret
metadata:
  name: stunner-{{ include "openvidu.fullname" . }}-auth-secret
type: Opaque
stringData:
  type: static
  username: {{ .Values.stunner.username }}
  password: {{ .Values.stunner.password }}
---
apiVersion: stunner.l7mp.io/v1
kind: GatewayConfig
metadata:
  name: stunner-{{ include "openvidu.fullname" . }}-gatewayconfig
spec:
  logLevel: {{ .Values.stunner.logLevel }}
  realm: {{ .Values.stunner.realm }}
  authRef:
    name: stunner-{{ include "openvidu.fullname" . }}-auth-secret
    namespace: {{ .Release.Namespace }}
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
{{- if .Values.stunner.annotations }}
  annotations:
{{ toYaml .Values.stunner.annotations | indent 8 }}
{{- end }}
  name: stunner-{{ include "openvidu.fullname" . }}-server
spec:
  gatewayClassName: stunner-{{ include "openvidu.fullname" . }}-gatewayclass
  listeners:
    - name: udp-listener
      port: 3478
      protocol: TURN-UDP
      allowedRoutes:
        namespaces:
          from: {{ .Values.stunner.routesNamespaces }}
    - name: dtls-listener
      port: 5349
      protocol: TURN-DTLS
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            namespace: {{ .Release.Namespace }}
          {{- if .Values.stunner.owncert.enabled }}
            name: {{ .Values.stunner.owncert.secret }}
          {{- else }}
            name: stunner-{{ include "openvidu.fullname" . }}-tls
          {{- end }}
      allowedRoutes:
        namespaces:
          from: {{ .Values.stunner.routesNamespaces }}
    - name: tcp-listener
      port: 3478
      protocol: TURN-tcp
      allowedRoutes:
        namespaces:
          from: {{ .Values.stunner.routesNamespaces }}
    - name: tls-listener
      port: 5349
      protocol: TURN-TLS
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            namespace: {{ .Release.Namespace }}
          {{- if .Values.stunner.owncert.enabled }}
            name: {{ .Values.stunner.owncert.secret }}
          {{- else }}
            name: stunner-{{ include "openvidu.fullname" . }}-tls
          {{- end }}
      allowedRoutes:
        namespaces:
          from: {{ .Values.stunner.routesNamespaces }}
    - name: tls-listener-alt
      port: 443
      protocol: TURN-TLS
      tls:
        mode: Terminate
        certificateRefs:
          - kind: Secret
            namespace: {{ .Release.Namespace }}
          {{- if .Values.stunner.owncert.enabled }}
            name: {{ .Values.stunner.owncert.secret }}
          {{- else }}
            name: stunner-{{ include "openvidu.fullname" . }}-tls
          {{- end }}
      allowedRoutes:
        namespaces:
          from: {{ .Values.stunner.routesNamespaces }}
---
apiVersion: stunner.l7mp.io/v1
kind: UDPRoute
metadata:
  name: stunner-{{ include "openvidu.fullname" . }}-server
spec:
  parentRefs:
    - name: stunner-{{ include "openvidu.fullname" . }}-server
  rules:
    - backendRefs:
      {{- if eq .Values.mode "deployment" }}
        - name: {{ include "openvidu.fullname" . }}
      {{- else if eq .Values.mode "distributed" }}
        - name: {{ include "openvidu.fullname" . }}
      {{- end }}
          namespace: {{ .Release.Namespace }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: openvidu-kubernetes
    stunner.l7mp.io/enable-mixed-protocol-lb: "true"
    stunner.l7mp.io/related-gateway-name: jx-dkv-develop/stunner-openvidu-kubernetes-server
  labels:
    gitops.jenkins-x.io/pipeline: namespaces
    stunner.l7mp.io/owned-by: stunner
    stunner.l7mp.io/related-gateway-name: stunner-openvidu-kubernetes-server
    stunner.l7mp.io/related-gateway-namespace: jx-dkv-develop
  name: stunner-openvidu-kubernetes-server
  namespace: jx-dkv-develop
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchExpressions:
    - key: app
      operator: In
      values:
      - stunner
    - key: stunner.l7mp.io/related-gateway-name
      operator: In
      values:
      - stunner-openvidu-kubernetes-server
    - key: stunner.l7mp.io/related-gateway-namespace
      operator: In
      values:
      - jx-dkv-develop
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        stunner.l7mp.io/related-gateway-name: jx-dkv-develop/stunner-openvidu-kubernetes-server
      creationTimestamp: null
      labels:
        app: stunner
        stunner.l7mp.io/related-gateway-name: stunner-openvidu-kubernetes-server
        stunner.l7mp.io/related-gateway-namespace: jx-dkv-develop
    spec:
      containers:
      - args:
        - -w
        - --udp-thread-num=16
        command:
        - stunnerd
        env:
        - name: STUNNER_ADDR
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: STUNNER_NAME
          value: stunner-openvidu-kubernetes-server
        - name: STUNNER_NAMESPACE
          value: jx-dkv-develop
        - name: STUNNER_CONFIG_ORIGIN
          value: http://10.244.5.202:13478
        image: docker.io/l7mp/stunnerd:0.21.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /live
            port: 8086
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        name: stunner-daemon
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ready
            port: 8086
            scheme: HTTP
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "2"
            memory: 512Mi
          requests:
            cpu: 500m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 3600
{{- end }}