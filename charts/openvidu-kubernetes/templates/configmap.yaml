apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "openvidu.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "openvidu.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
data:
  {{- if .Values.ingress.enabled }}
  DOMAIN_OR_PUBLIC_IP: {{ index .Values.ingress.hosts 0 }}
  HTTP_PORT: "80"
  HTTPS_PORT: "{{ .Values.services.openvidu.port }}"
  {{- end }}
  OPENVIDU_SECRET: "{{ .Values.services.openvidu.secret }}"
  COTURN_IP: {{ .Values.services.openvidu.coturn.ip }}
  COTURN_PORT: "{{ .Values.services.openvidu.coturn.port }}"
  COTURN_URIS_LIST: {{ .Values.services.openvidu.coturn.uris }}
  OPENVIDU_WEBRTC_ICE_SERVERS: '{{ .Values.services.openvidu.coturn.iceServers }}'
  KMS_URIS: '{{ .Values.services.openvidu.kms.uris }}'
  {{- if .Values.services.openvidu.coturn.redis }}
  COTURN_REDIS_IP: "{{ .Values.services.openvidu.coturn.redis.ip }}"
  COTURN_REDIS_DBNAME: "{{ .Values.services.openvidu.coturn.redis.db }}"
  COTURN_REDIS_PASSWORD: "{{ .Values.services.openvidu.coturn.redis.password }}"
  {{- end }}
  SERVER_SSL_ENABLED: "{{ .Values.services.openvidu.ssl.enabled }}"
  {{- if .Values.services.openvidu.ssl.enabled }}
  CERTIFICATE_TYPE: "{{ .Values.services.openvidu.ssl.certType }}"
  {{- end }}
  OPENVIDU_RECORDING: "{{ .Values.services.openvidu.recording.enabled }}"
  {{- if .Values.services.openvidu.recording.enabled }}        
  OPENVIDU_RECORDING_DEBUG: "{{ .Values.services.openvidu.recording.debug }}"
  OPENVIDU_RECORDING_PATH: "{{ .Values.services.openvidu.recording.path }}"
  OPENVIDU_RECORDING_CUSTOM_LAYOUT: "{{ .Values.services.openvidu.recording.layout }}"
  OPENVIDU_RECORDING_PUBLIC_ACCESS: "{{ .Values.services.openvidu.recording.public }}"
  OPENVIDU_RECORDING_NOTIFICATION: "{{ .Values.services.openvidu.recording.notification }}"
  OPENVIDU_RECORDING_AUTOSTOP_TIMEOUT: "{{ .Values.services.openvidu.recording.autostop }}"
  {{- end }}
  OPENVIDU_STREAMS_VIDEO_MAX_RECV_BANDWIDTH: "{{ .Values.services.openvidu.bandwidth.received.max }}"
  OPENVIDU_STREAMS_VIDEO_MIN_RECV_BANDWIDTH: "{{ .Values.services.openvidu.bandwidth.received.min }}"
  OPENVIDU_STREAMS_VIDEO_MAX_SEND_BANDWIDTH: "{{ .Values.services.openvidu.bandwidth.send.max }}"
  OPENVIDU_STREAMS_VIDEO_MIN_SEND_BANDWIDTH: "{{ .Values.services.openvidu.bandwidth.send.min }}"
  OPENVIDU_WEBHOOK: "{{ .Values.services.openvidu.webhook.enabled }}"
  {{- if .Values.services.openvidu.webhook.enabled }}
  OPENVIDU_WEBHOOK_ENDPOINT: {{ .Values.services.openvidu.webhook.endpoint }}
  OPENVIDU_WEBHOOK_HEADERS: '{{ .Values.services.openvidu.webhook.headers }}'
  OPENVIDU_WEBHOOK_EVENTS: '{{ .Values.services.openvidu.webhook.events }}'
  {{- end }}
  OPENVIDU_STREAMS_ALLOW_TRANSCODING:  "{{ .Values.services.openvidu.transcoding.enabled }}"  
  OPENVIDU_SESSIONS_GARBAGE_INTERVAL: "{{ .Values.services.openvidu.gc.interval }}"
  OPENVIDU_SESSIONS_GARBAGE_THRESHOLD: "{{ .Values.services.openvidu.gc.threshold }}"
  OPENVIDU_CDR: "{{ .Values.services.openvidu.cdr.enabled }}"
  OPENVIDU_CDR_PATH: "{{ .Values.services.openvidu.cdr.path }}"
  {{- if .Values.services.openvidu.pro.enabled }}
  OPENVIDU_EDITION: pro
  OPENVIDU_PRO_LICENSE: "{{- .Values.services.openvidu.pro.license }}"
  OPENVIDU_PRO_CLUSTER: "{{- .Values.services.openvidu.pro.cluster }}"
  OPENVIDU_PRO_COTURN_IN_MEDIA_NODES: "false"
  OPENVIDU_PRO_CLUSTER_AUTOSCALING: "{{- .Values.services.openvidu.pro.autoscaling }}"
  OPENVIDU_PRO_CLUSTER_MODE: "{{- .Values.services.openvidu.pro.mode }}"
  OPENVIDU_PRO_CLUSTER_ENVIRONMENT: "{{- .Values.services.openvidu.pro.environment }}"
  OPENVIDU_PRO_CLUSTER_LOAD_STRATEGY: "{{- .Values.services.openvidu.pro.loadStrategy }}"
  OPENVIDU_PRO_ELASTICSEARCH: "{{- .Values.services.openvidu.pro.elasticsearch }}"
  OPENVIDU_PRO_NETWORK_QUALITY: "{{- .Values.services.openvidu.pro.networkQoS }}"
  {{- end }}