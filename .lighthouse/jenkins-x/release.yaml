apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: release
spec:
  pipelineSpec:
    tasks:
    - name: openvidu-kubernetes
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          env:        
          - name: ENVIRONMENT
            value: dkv-prod
          - name: ARTIFACT
            value: static/js/openvidu-browser
          - name: NPM_CONFIG_USERCONFIG
            value: /tekton/home/npm/.npmrc                        
          image: uses:jaraxasoftware/jaraxa-pipeline-catalog/tasks/javascript/release.yaml@versionStream
          name: ""
          resources: {}
          volumeMounts:
            - mountPath: /tekton/home/npm
              name: npmrc          
          workingDir: /workspace/source          
        steps:
        - image: uses:jaraxasoftware/jaraxa-pipeline-catalog/tasks/git-clone/git-clone.yaml@versionStream
          name: ""
          resources: {}
        - name: next-version
          script: |
            #!/usr/bin/env sh
            echo -$BUILD_ID >> VERSION              
        - name: jx-variables
          resources: {}
        - image: node:14-slim
          name: build-npm-version
          script: |
            #!/bin/bash
            source .jx/variables.sh
            cd openvidu-browser
            npm install
            npm --no-git-tag-version version $VERSION           
        - image: node:14-slim
          name: openvidu-browser-build
          script: |
            #!/usr/bin/env bash
            source .jx/variables.sh
            cd openvidu-browser
            echo "Building openvidu-browser"
            npm run build
            npm run browserify
        - image: node:14-slim
          name: build-npm-publish
          script: |
            #!/bin/bash
            source .jx/variables.sh
            cd openvidu-browser
            npm publish           
        - name: chart-docs
          resources: {}    
        - name: promote-changelog
          resources: {}
        #- env:
        #  - name: GITHUB_TOKEN
        #    valueFrom:
        #      secretKeyRef:
        #        key: oauth
        #        name: lighthouse-oauth-token          
        #  image: golang:1.15
        #  name: upload-artifacts-release
        #  resources: {}
        #  script: |
        #    #!/usr/bin/env bash
        #    source .jx/variables.sh
        #
        #    go get github.com/github-release/github-release
        #    github-release upload \
        #      --user ${REPO_OWNER} \
        #      --repo ${REPO_NAME} \
        #      --tag v${VERSION} \
        #      --name "${REPO_NAME}-linux-amd64" \
        #      --file ${ARTIFACT}-latest            
        - name: promote-helm-release
          resources: {}
        - name: promote-jx-promote
          resources: {}
        volumes:
        - name: npmrc
          secret:
            optional: true
            secretName: npmrc          
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 12h0m0s
status: {}
